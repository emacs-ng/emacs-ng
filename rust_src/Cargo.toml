[package]
authors = ["emacs-ng members"]
name = "emacsng"
description = "Experimental emacs fork"
license = "GPL-3.0"
version = "0.1.0"
build = "build.rs"
edition = "2018"

[workspace]
members = ["remacs-lib", "crates/*"]
exclude = ["remacs-bindings"]

[dependencies]
remacs-lib = { version = "0.1.0", path = "remacs-lib" }
lisp = { version = "0.1.0", path = "crates/lisp" }
lisp-util = { version = "0.1.0", path = "crates/lisp_util" }
lisp-macros = { version = "0.1.0", path = "crates/lisp_macros" }
clippy = { version = "*", optional = true }
cfg-if = "0.1"
deno_core = { git = "https://github.com/DavidDeSimone/deno", branch = "emacs-ng" }
deno_runtime = { git = "https://github.com/DavidDeSimone/deno", branch = "emacs-ng" }
deno = { git = "https://github.com/DavidDeSimone/deno", branch = "emacs-ng" }
crossbeam = "0.8"
errno = "0.2"
field-offset = "0.1"
flate2 = { version = "1.0", features = ["rust_backend"], default-features = false }
futures = "0.3"
lazy_static = "1.2"
libc = "0.2"
line-wrap = "0.1.1"
lsp-server = "0.5.0"
rand = "0.6.5"
rusty_v8 = "0.15.0"
serde_json = { version = "1.0", features = ["preserve_order"] }
systemstat = "0.1"
tokio = { version = "0.2.22", features = ["full"] }
tokio-rustls = "0.14.1"

[build-dependencies]
clippy = { version = "*", optional = true }
lazy_static = "1.2"
libc = "0.2"
regex = "1.1"

[dev-dependencies]
tempfile = "3.0"

[lib]
crate-type = ["staticlib"]

# Allow unwinding in functions called from C. See
# https://www.reddit.com/r/rust/comments/565q1f/wrote_a_blogpost_from_my_experiences_the_arduous/d8h053m/
[profile.dev]
panic = "abort"

[profile.release]
panic = "abort"
codegen-units = 1
lto = true
# This reduces the binary size from 125M to 70M due
# to Deno inclusion
opt-level = 'z' # Optimize for size


[features]
default = [
  "use-xml2", "window-system", "window-system-x11", "libvterm",
]

# Compile with C xml2 library support.
use-xml2 = []
# Use a window system
window-system = []
# Use the x11 window system
window-system-x11 = []
# Use the nextstep window system
window-system-nextstep = []
# Use the w32 window system
window-system-w32 = []
# Build with libvterm support.
libvterm = []
# Use the webrender window system
window-system-webrender = []
# Treat warnings as a build error on Travis.
strict = []

# Enable glyphs debugging code.
glyph-debug = []
