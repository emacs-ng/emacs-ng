name: Create Release Asset

on:
  schedule:
    - cron: "0 0 * * 0" # weekly
  push:
    tags:
      'v*'

jobs:
  build:
    name: Create Release Asset
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Get latest release
        id: cur_release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
          excludes: draft
      - name: Set outputs
        id: vars
        run: |
          tag=${GITHUB_REF#refs/tags/*}
          sha=$(git rev-parse --short HEAD)
          version=$([[ $tag == v* ]] && echo ${tag:1} || echo 0.0.$sha)
          prerelease=$([[ $tag == v* ]] && echo false || echo true)
          [[ v$version == ${{ steps.cur_release.outputs.release }} ]] && exit 1
          echo "tag=$tag" >> $GITHUB_ENV
          echo "sha=$sha" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_ENV
          echo "prerelease=$prerelease" >> $GITHUB_ENV
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          ./build_emacs_ng.sh ${{ env.version }}
      - name: Do Release
        id: do_release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.version }}
          name: emacs-ng_${{ env.version }}
          draft: false
          prerelease: ${{ env.prerelease }}
          artifactErrorsFailBuild: true
          artifacts: ./emacs-ng_${{ env.version }}-1_amd64.deb
          artifactContentType: application/vnd.debian.binary-package
          token: ${{ secrets.GITHUB_TOKEN }}
