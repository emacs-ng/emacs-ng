name: CI

on: [push, pull_request]

jobs:
    unix-test:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest]

        steps:
            - uses: actions/checkout@v2

            - name: Install dependencies on Linux
              if: runner.os == 'Linux'
              run: |
                  sudo apt install -y build-essential texinfo libx11-dev libxpm-dev libjpeg-dev libpng-dev libgif-dev libtiff-dev libgtk2.0-dev libncurses-dev libxpm-dev automake autoconf libgnutls28-dev zlib1g-dev libgccjit-9-dev

            - name: Install dependencies on macOS
              if: runner.os == 'macOS'
              run: |
                  brew install gnutls texinfo autoconf

            - name: rustfmt
              run: |
                  # Configure $PATH: Executables are installed to $HOME/bin
                  export PATH="$HOME/bin:$PATH"

                  rustup install $(cat rust-toolchain)
                  rustup component add rustfmt-preview
                  ./autogen.sh && ./configure --without-makeinfo --with-x=no --with-ns=no --without-gconf --without-gsettings
                  admin/format-rust.sh

            - name: build
              run: |
                  ./autogen.sh && RUSTFLAGS="-Dwarnings" WERROR_CFLAGS='-Werror -Wno-error=deprecated-declarations'
                  ./configure --enable-checking=glyphs
                  make -j3

            - name: js fmt
              run: |
                  cd test/js/
                  ../../src/emacs --batch --eval '(deno "fmt" "--check")'
                  cd ../../rust_src/src
                  ../../src/emacs --batch --eval '(deno "fmt" "--check")'
                  cd ../../

            - name: run js tests
              run: |
                  cd test/js/
                  ../../src/emacs --batch --eval '(deno "test" "main.js" "--allow-read" "--allow-write")'
